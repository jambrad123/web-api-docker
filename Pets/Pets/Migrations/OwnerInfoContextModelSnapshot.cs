// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pets;

#nullable disable

namespace Pets.Migrations
{
    [DbContext(typeof(OwnerInfoContext))]
    partial class OwnerInfoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pets.Entities.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "",
                            Name = "Jhon"
                        },
                        new
                        {
                            Id = 2,
                            Address = "",
                            Name = "Samuel"
                        });
                });

            modelBuilder.Entity("Pets.Entities.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Pets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(2024, 8, 31, 13, 39, 17, 691, DateTimeKind.Local).AddTicks(9027),
                            Name = "Ezreal",
                            OwnerId = 1
                        },
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(2024, 8, 31, 13, 39, 17, 691, DateTimeKind.Local).AddTicks(9037),
                            Name = "Seraphine",
                            OwnerId = 2
                        },
                        new
                        {
                            Id = 3,
                            Birthdate = new DateTime(2024, 8, 31, 13, 39, 17, 691, DateTimeKind.Local).AddTicks(9038),
                            Name = "Varus",
                            OwnerId = 2
                        });
                });

            modelBuilder.Entity("Pets.Entities.Pet", b =>
                {
                    b.HasOne("Pets.Entities.Owner", "Owner")
                        .WithMany("Pets")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Pets.Entities.Owner", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
